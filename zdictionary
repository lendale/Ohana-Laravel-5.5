actualBounds
	- GraphObject class; returns the bounds of this GraphObject in container coordinates
add
	- Diagram class; Adds a Part to the Layer that matches the Part's Part.layerName
addLinkData
	- GraphLinksModel class; add that data to the linkDataArray
addNode
	- LayoutNetwork class; makes sure there is a LayoutVertex in this network corresponding to a Node
addNodeData
	- Model class; add that data to the nodeDataArray
Binding (class)
	- to automatically set a property on a GraphObject to a value of a property of data in the model
columnSpacing
	- LayeredDigraphLayout class; space between children
commitNodes
	- LayeredDigraphLayout class; Commit the position of all nodes
computePoints
	- Link class; constructs a new route by modifying the points
createNetwork
	- Layout class; Create a new LayoutNetwork of LayoutVertexes and LayoutEdges
Diagram (class)
	- associated with an HTML DIV element; creates an HTML Canvas element which it places inside of the given DIV element
direction
	- LayeredDigraphLayout class; the direction the graph grows towards. 0 is towards the right, 90 is downwards, 180 is towards the left, and 270 is upwards
edge
	- LayoutEdge class; represents a Link in a LayoutNetwork, along with its fromVertex and toVertex
elt
	- List class; Returns the element at the given index
findLinksBetween
	- Node class; Returns an iterator over all of the Links that go from this node to another node
findNodeForKey
	- Diagram class; Look for a node using the node's unique key
findNodesInto
	- Node class; Returns an iterator over the Nodes that are connected with this node
findNodesOutOf
	- Node class; Returns an iterator over the Nodes that are connected with this node
findVertex
	- LayoutNetwork class; Returns the LayoutVertex that was constructed for the Node
focus
	- LayoutVertex class; Gets or sets the offset of the focusX and focusY from the bounds position
fromEndSegmentLength
	- GraphObject class; the length of the first segment of a link coming from this port
fromSpot
	- Link class; where the link starts
Group (class)
	-  a Node that can contain a subgraph of Nodes and Links, which are members of the group
InitDepthFirstIn
	- LayeredDigraphLayout class; 
initializeOption
	- LayeredDigraphLayout class; Gets or sets which indices initialization option is being used
invalidateRoute
	- Link class; Declare that the route (the points) of this Link need to be recomputed soon
isLabeledLink
	- Link class; when this Link has any label Nodes, Nodes that are owned by this Link
isLinkLabel
	- Node class;  when this Node is a label node for a Link
itemArray
	- Panel class; 
labelNodes
	- Link class; returns an iterator over the Nodes that act as labels on this Link
LayeredDigraphLayout (class)
	- arranges nodes of directed graphs into layers (rows or columns)
layerName
	- Layer class; how named collections of Parts are drawn in front or behind other collections of Parts in a Diagram
layerSpacing
	- LayeredDigraphLayout class; space between parent and child nodes
Layout (class)
	- the base class for all of the predefined diagram layout implementations; only arrange Parts (primarily Nodes and Links) in a Diagram
LayoutEdge (class)
	- constructs an edge that does not know about any Link
LayoutNetwork (class)
	- constructs an empty network; provides an abstract view of a diagram as a network (graph) of vertexes and directed edges; permits adding or removing vertexes or edges from the network
LayoutVertex (class)
	- constructs a vertex that does not know about any Node
linkLabelKeysProperty
	- GraphLinksModel class; name of the data property that returns an array of keys of node data on that link data
links
	- Diagram class; returns an iterator of all Links in the Diagram
linksConnected
	- Node class; returns an iterator over all of the Links that are connected with this node both coming out and going in
linkVertexes
	- LayoutNetwork class; Links two vertexes already in the network and returns the created LayoutEdge
List (class)
	- An ordered iterable collection
location
	- Part class; the position of this part in document coordinates
locationSpot
	- Part class; the name of the GraphObject that provides the location of this Part
locationObjectName
	- Part class; the location Spot of this Node, the spot on the locationObject that is used in positioning this part in the diagram
makeNetwork
	- Layout class; Create and initialize a LayoutNetwork with the given nodes and links
Math.max
	- returns the largest of zero or more numbers; The largest of the given numbers
memberParts
	- Group class; returns an iterator over the member Parts of this Group
network
	- Layout class; the LayoutNetwork used by this Layout, if any
next
	- Iterator class; advance the iterator to the next item in the collection
nodeCategoryProperty
	- Model class; determines which template is used (category)
nodeDataArray
	- Model class; the array of node data objects
nodes
	- Diagram class; returns an iterator of all Nodes in the Diagram
nodeSelectionAdornmentTemplate
	- Diagram class; a template created for a selected node in setupDiagram function
Panel (class)
	- responsible for sizing and positioning its elements; holds other GraphObjects as its elements
Picture (class)
	- a GraphObject that shows an image, video-frame, or Canvas element
Point (class)
	- represents an x- and y-coordinate pair in two-dimensional space
points
	- Link class; the List of Points in the route
prototype
	- do not modify; define new class to override methods
Rect (class)
	- describes a rectangular two-dimensional area as a top-left point (x and y values) and a size (width and height values)
reset
	- Iterator class; Start this iterator all over again
routing
	- Link class; how the link moves
select
	- Diagram class; Make the given object the only selected object
Set (class)
	- An unordered iterable collection that cannot contain two instances of the same kind of value
setElt(index, value)
	- List class; Set the element at the given index to a given value
spouseSpacing
	- created for this layout
strokeDashArray
	- Shape class; Gets or sets the dash array for creating dashed or dotted lines; the array [5, 10] would create dashes of 5 pixels and spaces of 10 pixels
TextBlock (class)
	- a GraphObject that displays a text string in a given font
toSpot
	- Link class; where the link ends
vertex
	- LayoutVertex class; represents a Node in a LayoutNetwork; This read-only property returns an iterator for all of the vertexes that are connected in either direction with this vertex
vertexes
	- LayoutVertex class; returns an iterator for all of the vertexes that are connected in either direction with this vertex